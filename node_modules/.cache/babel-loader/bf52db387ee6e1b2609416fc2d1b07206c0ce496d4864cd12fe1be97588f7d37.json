{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom/client\";// React 18+\nimport{BrowserRouter}from\"react-router-dom\";import App from\"./App\";// Ensure your index.html has <div id=\"root\"></div>\nimport{jsx as _jsx}from\"react/jsx-runtime\";const rootElement=document.getElementById(\"root\");if(!rootElement){throw new Error(\"Root element not found. Check if <div id='root'></div> exists in index.html.\");}// Create the root for rendering\nconst root=ReactDOM.createRoot(rootElement);root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(App,{})})}));","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","App","jsx","_jsx","rootElement","document","getElementById","Error","root","createRoot","render","StrictMode","children"],"sources":["/Users/sarahpark/Desktop/IvaWebsite/src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\"; // React 18+\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\n// Ensure your index.html has <div id=\"root\"></div>\nconst rootElement = document.getElementById(\"root\");\nif (!rootElement) {\n    throw new Error(\"Root element not found. Check if <div id='root'></div> exists in index.html.\");\n}\n\n// Create the root for rendering\nconst root = ReactDOM.createRoot(rootElement);\n\nroot.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>\n\n);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CAAE;AACzC,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,GAAG,KAAM,OAAO,CAEvB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,CAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACnD,GAAI,CAACF,WAAW,CAAE,CACd,KAAM,IAAI,CAAAG,KAAK,CAAC,8EAA8E,CAAC,CACnG,CAEA;AACA,KAAM,CAAAC,IAAI,CAAGT,QAAQ,CAACU,UAAU,CAACL,WAAW,CAAC,CAE7CI,IAAI,CAACE,MAAM,cACPP,IAAA,CAACL,KAAK,CAACa,UAAU,EAAAC,QAAA,cACbT,IAAA,CAACH,aAAa,EAAAY,QAAA,cACVT,IAAA,CAACF,GAAG,GAAE,CAAC,CACI,CAAC,CACF,CAEtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}